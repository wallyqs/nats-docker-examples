#+title: Development environment

*** Development box

#+BEGIN_SRC ruby :tangle Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
source /home/vagrant/.bashrc
if [ ! -d /usr/local/go ]; then
  echo "Installing Go..."
  wget https://storage.googleapis.com/golang/go1.7.1.linux-amd64.tar.gz -O /usr/local/go.tar.gz
  cd /usr/local && tar xvf go.tar.gz
  echo 'export PATH=$PATH:/usr/local/go/bin' >> /home/ubuntu/.bashrc
  echo 'export GOPATH=$HOME/go' >> /home/ubuntu/.bashrc
  echo 'export PATH=$PATH:$HOME/go/bin' >> /home/ubuntu/.bashrc
  CGO_ENABLED=0 sudo /usr/local/go/bin/go install -a -installsuffix cgo std
fi

if ! which docker &> /dev/null; then
  echo "Installing Docker..."
  sudo apt-get update
  sudo apt-get install apt-transport-https ca-certificates
  sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  sudo bash -c "echo 'deb https://apt.dockerproject.org/repo ubuntu-xenial main' > /etc/apt/sources.list.d/docker.list"
  sudo apt-get update
  sudo apt-get -y install docker-engine
fi
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.provision "shell", inline: $script

  config.vm.provider "virtualbox" do |v|
    v.memory = 4096
    v.cpus = 2
  end
end
#+END_SRC

*** DONE Dependencies
  :properties:
  :header-args: :results output :dir /ssh:ubuntu@127.0.0.1#2222:
  :end:

**** Docker Compose install

#+BEGIN_SRC sh 
sudo apt-get install -y python-setuptools
sudo easy_install pip
sudo pip install -U docker-compose
docker-compose up
#+END_SRC

**** Prepare Go development environment

#+BEGIN_SRC sh
mkdir -p go/src
#+END_SRC

- Get NATS server and client:

#+BEGIN_SRC sh
go get -u github.com/nats-io/nats
go get -u github.com/nats-io/gnatsd
#+END_SRC

